// ********RoostGPT********
/*
Test generated by RoostGPT for test java-customannotation-test using AI Type Open AI and AI Model gpt-3.5-turbo

ROOST_METHOD_HASH=onConnect_f245232bc5
ROOST_METHOD_SIG_HASH=onConnect_a7f54306c4


*/

// ********RoostGPT********
import ngrok from '../../examples/game/game';

describe('ngrok.connect', () => {
  let mockUrl = 'http://localhost:3000';

  beforeEach(() => {
    jest.spyOn(console, 'log').mockImplementation();
  });

  afterEach(() => {
    jest.restoreAllMocks();
  });

  test('should tunnel the game successfully', () => {
    const mockCallback = jest.fn();
    ngrok.connect(3000, mockCallback);
    expect(mockCallback).toHaveBeenCalledWith(null, mockUrl);
    expect(console.log).toHaveBeenCalledWith(`Game tunneled at ${mockUrl}`);
  });

  test('should throw an error if connection fails', () => {
    const mockError = new Error('Connection error');
    const mockCallback = jest.fn();
    ngrok.connect(4000, mockCallback);
    expect(mockCallback).toHaveBeenCalledWith(mockError, undefined);
    expect(console.log).not.toHaveBeenCalled();
  });
});
